project(porta-googleapi)

add_compile_options(-std=c++11 -O3)

set(GOOGLE_API_PROTO_DIR ${CMAKE_CURRENT_SOURCE_DIR}/googleapis CACHE INTERNAL "GOOGLE_API_PROTO_DIR")
set(GOOGLE_API_PROTO_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR} CACHE INTERNAL "GOOGLE_API_PROTO_INCLUDE_DIR")
include_directories(${CMAKE_CURRENT_BINARY_DIR})

# annotations.proto
set(ANNOTATIONS_PATH "google/api")
set(ANNOTATIONS_NAME "annotations")
set(ANNOTATIONS_PROTO ${GOOGLE_API_PROTO_DIR}/${ANNOTATIONS_PATH}/${ANNOTATIONS_NAME}.proto)

set(PROTO_GEN_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR})
file(MAKE_DIRECTORY ${PROTO_GEN_OUT_DIR})

set(ANNOTATIONS_PROTO_SRCS ${PROTO_GEN_OUT_DIR}/${ANNOTATIONS_PATH}/${ANNOTATIONS_NAME}.pb.cc)
set(ANNOTATIONS_PROTO_HDRS ${PROTO_GEN_OUT_DIR}/${ANNOTATIONS_PATH}/${ANNOTATIONS_NAME}.pb.h)

add_custom_command(
    OUTPUT ${ANNOTATIONS_PROTO_SRCS} ${ANNOTATIONS_PROTO_HDRS}
    COMMAND ${PROTOBUF_PROTOC_EXECUTABLE}
    ARGS --cpp_out=${PROTO_GEN_OUT_DIR}
        -I ${PROTOS}
        -I ${GOOGLE_API_PROTO_DIR}
        ${ANNOTATIONS_PROTO}
    DEPENDS ${ANNOTATIONS_PROTO} ${PROTOBUF_PROTOC_EXECUTABLE}
    COMMENT "Running C++ protoc compiler on ${ANNOTATIONS_PROTO}"
    VERBATIM)

# http.proto
set(HTTP_PATH "google/api")
set(HTTP_NAME "http")
set(HTTP_PROTO ${GOOGLE_API_PROTO_DIR}/${HTTP_PATH}/${HTTP_NAME}.proto)

set(PROTO_GEN_OUT_DIR ${CMAKE_CURRENT_BINARY_DIR})
file(MAKE_DIRECTORY ${PROTO_GEN_OUT_DIR})

set(HTTP_PROTO_SRCS ${PROTO_GEN_OUT_DIR}/${HTTP_PATH}/${HTTP_NAME}.pb.cc)
set(HTTP_PROTO_HDRS ${PROTO_GEN_OUT_DIR}/${HTTP_PATH}/${HTTP_NAME}.pb.h)

add_custom_command(
    OUTPUT ${HTTP_PROTO_SRCS} ${HTTP_PROTO_HDRS}
    COMMAND ${PROTOBUF_PROTOC_EXECUTABLE}
    ARGS --cpp_out=${PROTO_GEN_OUT_DIR}
        -I ${PROTOS}
        -I ${GOOGLE_API_PROTO_DIR}
        ${HTTP_PROTO}
    DEPENDS ${HTTP_PROTO_SRCS} ${PROTOBUF_PROTOC_EXECUTABLE}
    COMMENT "Running C++ protoc compiler on ${HTTP_PROTO}"
    VERBATIM)

ADD_LIBRARY( porta-googleapi STATIC ${ANNOTATIONS_PROTO_SRCS} ${HTTP_PROTO_SRCS} )
