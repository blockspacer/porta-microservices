# ========================================================
# Etcd options

# Discovery token that will be used by new Etcd node
# to join existing cluster
ETCD_DISCOVERY_TOKEN="etcd-token"

# ========================================================
# Kubernetes options

# The IP address of the Kubernetes API Service. The K8S_SERVICE_IP will be the first IP in the SERVICE_IP_RANGE
# discussed in the deployment guide. The first IP in the default range of 10.3.0.0/24 will be 10.3.0.1.
# If the SERVICE_IP_RANGE was changed from the default, this value must be updated as well.
K8S_SERVICE_IP="10.3.0.1"

# The cluster name that will be used in internal DNS. Default: kubernetes
K8S_CLUSTER_NAME="kubernetes"

# IPv4 address on Kubernetes DNS addon. All services and pods will use it.
K8S_CLUSTER_DNS_IPV4="10.3.0.10"

# Kubernetes internal domain to to used as part of service names like:
# service_1.cluster.local
K8S_CLUSTER_DOMAIN="cluster.local"

# Network for Kubernetes services. Each Service that is created inside Kubernetes
# has SERVICE_IP from this range
K8S_SERVICE_NETWORK="10.3.0.0/21"

# Network for Kubernetes services. Each Pod that is created inside Kubernetes
# has POD_IP from this range
K8S_POD_NETWORK="10.2.0.0/16"

# Kubernetes control plane image tag
K8S_IMAGE_TAG="v1.9.2"

# Kubelet image tag
KUBELET_IMAGE_TAG="${K8S_IMAGE_TAG}_coreos.0"

# ========================================================
# Kubernetes Bootstrap options

# NOTE: The options below should be generated only once
# and then used for botstraping all nodes in cluster.
# DO NOT LOSE these values!

# Public part of bootstrap token
# Use this cmd for generating:
# openssl rand -hex 3
K8S_TOKEN_PUB="f188bc"

# Private part of bootstrap token
# Use this cmd for generating:
# openssl rand -hex 16
K8S_TOKEN_SECRET="abc4132e7cdcbd42"

# ========================================================
# OpenStack options

# The public address of the master node. In most cases this will be the publicly 
# routable IP or hostname of the node. Worker nodes must be able to reach the 
# master node(s) via this address on port 443. Additionally, external 
# clients (such as an administrator using kubectl) will also need access, 
# since this will run the Kubernetes API endpoint.
MASTER_PUBLIC_IPV4="192.168.67.107"

# Master private IP (internal OpenStack network)
MASTER_PRIVATE_IPV4="10.16.50.3"

# Master node public hostname. This name should resovle to MASTER_PUBLIC_IPV4
MASTER_PUBLIC_HOSTNAME="etsys-sm-107.vms"

# Auth URL for cloud-config. Used for K8S <-> OpenStack interaction
OPENSTACK_AUTH_URL="http://192.168.73.153:5000/v2.0"

# Auth user for cloud-config. Used for K8S <-> OpenStack interaction
OPENSTACK_AUTH_USERNAME="admin"

# Auth password for cloud-config. Used for K8S <-> OpenStack interaction
OPENSTACK_AUTH_PASSWD="www333"

# Tenant id for cloud-config. Used for K8S <-> OpenStack interaction
# On OpenStack control panels, this can be found at Access and Security > API Access > Credentials.
OPENSTACK_TENANT_NAME="admin"

# Domain id for cloud-config. Used for K8S <-> OpenStack interaction
OPENSTACK_DOMAIN_ID="default"

# ========================================================
# Monitoring options
# Is used as base route to monitoring resources
MONITORING_ROUTE="monitoring"

# ========================================================
# Grafana options

# Is used as part of URL to grafana ingress as:
# https://${MASTER_PUBLIC_HOSTNAME}/${GRAFANA_INGRESS_ROUTE}
GRAFANA_INGRESS_ROUTE="${MONITORING_ROUTE}/grafana"

# Admin username
GRAFANA_ADMIN_USER="admin"

# Admin password
GRAFANA_ADMIN_PASSWORD="admin"

# ========================================================
# Prometheus options

# Is used as part of URL to prometheus ingress as:
# https://${MASTER_PUBLIC_HOSTNAME}/${PROMETHEUS_INGRESS_ROUTE}
PROMETHEUS_INGRESS_ROUTE="${MONITORING_ROUTE}/prometheus"

# ========================================================
# AlertManager options

# Is used as part of URL to alert manager ingress as:
# https://${MASTER_PUBLIC_HOSTNAME}/${ALERT_MNG_INGRESS_ROUTE}
ALERT_MNG_INGRESS_ROUTE="${MONITORING_ROUTE}/alert-manager"
